trigger:
  branches:
    include:
      - main
  paths:
    include:
      - databricks
      - ci/cd-databricks-tf.yml

# schedules:
#   - cron: "45 7 * * *"
#     displayName: "automatiserad"
#     always: false
#     branches:
#       include:
#         - main

pool:
  vmImage: ubuntu-latest

parameters:
  - name: environments
    type: object
    default:
      - dev
      #- stg

variables:
  workingDirectory: databricks

stages:
  - ${{ each environment in parameters.environments }}:
    - stage: apply_${{ environment }}
      displayName: "Init + Apply (${{ environment }})"
      variables:
        - name: azureSubscription
          ? ${{ if eq(environment, 'dev') }} 
          : value: databricks-dev-01
          ${{ else }}: 
            value: databricks-dev-02
      jobs:
        - job: apply
          displayName: Apply (${{ environment }})
          steps:
            - task: AzureCLI@2
              displayName: Set environment variables
              inputs:
                azureSubscription: ${{ variables.azureSubscription }}
                scriptType: pscore
                scriptLocation: inlineScript
                addSpnToEnvironment: true
                workingDirectory: ${{ variables.workingDirectory }}
                inlineScript: |
                  Write-Host "##vso[task.setvariable variable=ARM_USE_OIDC]true"
                  Write-Host "##vso[task.setvariable variable=ARM_OIDC_TOKEN]$env:idToken"
                  Write-Host "##vso[task.setvariable variable=ARM_CLIENT_ID]$env:servicePrincipalId"
                  Write-Host "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$(az account show --query id -o tsv)"
                  Write-Host "##vso[task.setvariable variable=ARM_TENANT_ID]$env:tenantId"

            - task: AzureCLI@2
              displayName: "Init + Apply"
              inputs:
                azureSubscription: ${{ variables.azureSubscription }}
                scriptType: pscore
                scriptLocation: scriptPath
                addSpnToEnvironment: true
                workingDirectory: ${{ variables.workingDirectory }}
                scriptPath: databricks/init-apply.ps1
                arguments: ${{ environment }}