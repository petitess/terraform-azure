{
    "name": "SILVER_LOAD_RDV",
    "properties": {
        "description": "Generic pipeline for load of data mart tables (dimension & fact tables)",
        "activities": [
            {
                "name": "DB Target Type",
                "type": "Switch",
                "dependsOn": [
                    {
                        "activity": "LOG_START",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "on": {
                        "value": "@pipeline().parameters.payload.payload.database_target_type",
                        "type": "Expression"
                    },
                    "cases": [
                        {
                            "value": "SQLPOOL_DEDICATED",
                            "activities": [
                                {
                                    "name": "Lookup_DW_ServiceLevel",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlDWSource",
                                            "sqlReaderQuery": "SELECT  db.name [Database]\n,        ds.edition [Edition]\n,        ds.service_objective [Service_Objective]\nFROM    master.sys.database_service_objectives   AS ds\nJOIN    master.sys.databases                     AS db ON ds.database_id = db.database_id\nWHERE db.name <> 'master'",
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "AzureSynapseAnalytics",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "schema": "dbo",
                                                "table": "test",
                                                "db_name": "master"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Set service_level",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Lookup_DW_ServiceLevel",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "service_level",
                                        "value": {
                                            "value": "@activity('Lookup_DW_ServiceLevel').output.firstRow.Service_Objective",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Load Raw Data Vault",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Set service_level",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": {
                                            "value": "@concat(pipeline().parameters.payload.payload.target_schema,'.sp_',pipeline().parameters.payload.payload.entity_name)",
                                            "type": "Expression"
                                        },
                                        "storedProcedureParameters": {
                                            "adf_pipeline_run_id": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSynapseAnalytics",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "DBName": {
                                                "value": "@pipeline().parameters.payload.payload.dw_name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "value": "SQL_SERVER_2019",
                            "activities": [
                                {
                                    "name": "Set service level onprem",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "service_level",
                                        "value": "N/A"
                                    }
                                },
                                {
                                    "name": "Load Raw Data Vault On-prem",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Set service level onprem",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": {
                                            "value": "@concat(pipeline().parameters.payload.payload.target_schema,'.sp_',pipeline().parameters.payload.payload.entity_name)",
                                            "type": "Expression"
                                        },
                                        "storedProcedureParameters": {
                                            "adf_pipeline_run_id": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "SqlServerOnPrem",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        },
                        {
                            "value": "LAKEHOUSE",
                            "activities": [
                                {
                                    "name": "LOAD_LAKEHOUSE",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Repos/customer-notebook/customer-notebook/load/load_lakehouse",
                                        "baseParameters": {
                                            "subject_area": {
                                                "value": "@pipeline().parameters.payload.payload.target_entity_rdv.subject_area",
                                                "type": "Expression"
                                            },
                                            "table_name": {
                                                "value": "@pipeline().parameters.payload.payload.target_table_name",
                                                "type": "Expression"
                                            },
                                            "db_target_type": {
                                                "value": "@pipeline().parameters.payload.payload.database_target_type",
                                                "type": "Expression"
                                            },
                                            "job_task_type": {
                                                "value": "@pipeline().parameters.payload.job_step_type_name",
                                                "type": "Expression"
                                            },
                                            "pipeline_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "Databricks",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    ],
                    "defaultActivities": [
                        {
                            "name": "Fail1",
                            "type": "Fail",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                                "message": "Not supported DB Target Type",
                                "errorCode": "101"
                            }
                        }
                    ]
                }
            },
            {
                "name": "LOG_START",
                "type": "WebActivity",
                "dependsOn": [],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "method": "PUT",
                    "headers": {
                        "Authorization": {
                            "value": "@concat('Bearer ', pipeline().parameters.access_token)",
                            "type": "Expression"
                        }
                    },
                    "url": {
                        "value": "@concat(pipeline().globalParameters.ORCHESTRATION_BASE_URL, '/environments/', pipeline().parameters.payload.environment_id, '/job_execution/', pipeline().parameters.payload.job_execution_id, '/job_task/', pipeline().parameters.payload.job_execution_queue_id,'/start')",
                        "type": "Expression"
                    },
                    "body": {
                        "value": "{}",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "LOG_END",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "DB Target Type",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "method": "PUT",
                    "headers": {
                        "Authorization": {
                            "value": "@concat('Bearer ', pipeline().parameters.access_token)",
                            "type": "Expression"
                        }
                    },
                    "url": {
                        "value": "@concat(pipeline().globalParameters.ORCHESTRATION_BASE_URL, '/environments/', pipeline().parameters.payload.environment_id, '/job_execution/', pipeline().parameters.payload.job_execution_id, '/job_task/', pipeline().parameters.payload.job_execution_queue_id,'/end')",
                        "type": "Expression"
                    },
                    "body": {
                        "value": "{}",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "LOG_FAIL",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "DB Target Type",
                        "dependencyConditions": [
                            "Failed"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "method": "PUT",
                    "headers": {
                        "Authorization": {
                            "value": "@concat('Bearer ', pipeline().parameters.access_token)",
                            "type": "Expression"
                        }
                    },
                    "url": {
                        "value": "@concat(pipeline().globalParameters.ORCHESTRATION_BASE_URL, '/environments/', pipeline().parameters.payload.environment_id, '/job_execution/', pipeline().parameters.payload.job_execution_id, '/job_task/', pipeline().parameters.payload.job_execution_queue_id,'/fail')",
                        "type": "Expression"
                    },
                    "body": {
                        "value": "{}",
                        "type": "Expression"
                    }
                }
            }
        ],
        "parameters": {
            "access_token": {
                "type": "string"
            },
            "payload": {
                "type": "object"
            },
            "from_date": {
                "type": "string"
            },
            "to_date": {
                "type": "string"
            }
        },
        "variables": {
            "start_time": {
                "type": "String"
            },
            "api_response": {
                "type": "Array"
            },
            "service_level": {
                "type": "String"
            }
        },
        "folder": {
            "name": "ORCHESTRATION/JOB_STEP_EXECUTORS"
        },
        "annotations": [],
        "lastPublishTime": "2023-11-28T15:36:19Z"
    },
    "type": "Microsoft.DataFactory/factories/pipelines"
}